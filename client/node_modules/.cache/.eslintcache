[{"C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\index.tsx":"1","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\App.tsx":"2","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\Layout.tsx":"3","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\index.ts":"4","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\Login\\index.ts":"5","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\ChatMessage\\index.ts":"6","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\Chat\\index.ts":"7","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\Login\\Login.tsx":"8","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\ChatMessage\\ChatMessage.tsx":"9","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\Chat\\Chat.tsx":"10","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\Rooms\\index.ts":"11","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\Rooms\\Rooms.tsx":"12","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\atoms.ts":"13","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\RequireAuth\\index.ts":"14","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\RequireAuth\\RequireAuth.tsx":"15"},{"size":490,"mtime":1642617639518,"results":"16","hashOfConfig":"17"},{"size":889,"mtime":1642620750224,"results":"18","hashOfConfig":"17"},{"size":236,"mtime":1642620670643,"results":"19","hashOfConfig":"17"},{"size":214,"mtime":1642620224484,"results":"20","hashOfConfig":"17"},{"size":32,"mtime":1642458424977,"results":"21","hashOfConfig":"17"},{"size":44,"mtime":1642533257896,"results":"22","hashOfConfig":"17"},{"size":30,"mtime":1642443663184,"results":"23","hashOfConfig":"17"},{"size":4477,"mtime":1642619556963,"results":"24","hashOfConfig":"17"},{"size":1243,"mtime":1642619643613,"results":"25","hashOfConfig":"17"},{"size":3415,"mtime":1642618192914,"results":"26","hashOfConfig":"17"},{"size":32,"mtime":1642616723640,"results":"27","hashOfConfig":"17"},{"size":2623,"mtime":1642618326957,"results":"28","hashOfConfig":"17"},{"size":557,"mtime":1642634158350,"results":"29","hashOfConfig":"17"},{"size":44,"mtime":1642620224468,"results":"30","hashOfConfig":"17"},{"size":477,"mtime":1642634383179,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"32dis6",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\index.tsx",[],["66","67"],"C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\App.tsx",[],["68","69"],"C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\Layout.tsx",[],"C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\index.ts",[],"C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\Login\\index.ts",[],"C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\ChatMessage\\index.ts",[],"C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\Chat\\index.ts",[],"C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\Login\\Login.tsx",["70"],"import { useRef, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword\r\n} from 'firebase/auth';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { userAuthTokenState, userInfoState } from '../../atoms';\r\n\r\nexport const Login = () => {\r\n  const userRef = useRef<HTMLInputElement | null>(null);\r\n  const errRef = useRef(null);\r\n\r\n  const [user, setUser] = useState('');\r\n  const [pwd, setPwd] = useState('');\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [userName, setUserName] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const setUserAuthToken = useSetRecoilState(userAuthTokenState);\r\n  const setUserInfo = useSetRecoilState(userInfoState);\r\n\r\n  useEffect(() => {\r\n    userRef.current?.focus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setErrMsg('');\r\n  }, [user, pwd]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    const authentication = getAuth();\r\n\r\n    try {\r\n      signInWithEmailAndPassword(authentication, user, pwd).then((data) => {\r\n        setUserAuthToken(data.user.refreshToken);\r\n      });\r\n\r\n      setUserInfo({ name: userName });\r\n\r\n      navigate(`/rooms`);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-xs flex flex-col justify-between items-center h-screen\">\r\n      <p\r\n        ref={errRef}\r\n        className={errMsg ? 'errmsg' : 'offscreen'}\r\n        aria-live=\"assertive\"\r\n      >\r\n        {errMsg}\r\n      </p>\r\n      <h1 className=\"text-5xl\">Sign In</h1>\r\n      <form\r\n        className=\"bg-white w-[50vw] shadow-md rounded px-8 pt-6 pb-8 mb-4 mx-56\"\r\n        onSubmit={(e) => handleSubmit(e)}\r\n      >\r\n        <div className=\"mb-4\">\r\n          <label\r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n            htmlFor=\"username\"\r\n          >\r\n            Username\r\n          </label>\r\n          <input\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            id=\"username\"\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            ref={userRef}\r\n            autoComplete=\"off\"\r\n            onChange={(e) => setUser(e.target.value)}\r\n            value={user}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <label\r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n            htmlFor=\"password\"\r\n          >\r\n            Password\r\n          </label>\r\n          <input\r\n            className=\"shadow appearance-none border border-red-500 rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"******************\"\r\n            onChange={(e) => setPwd(e.target.value)}\r\n            value={pwd}\r\n            required\r\n          />\r\n          <p className=\"text-red-500 text-xs italic\">\r\n            Please choose a password.\r\n          </p>\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <label\r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n            htmlFor=\"username\"\r\n          >\r\n            Choose a username\r\n          </label>\r\n          <input\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            id=\"username\"\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            autoComplete=\"off\"\r\n            onChange={(e) => setUserName(e.target.value)}\r\n            value={userName}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between\">\r\n          <button\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n            type=\"submit\"\r\n          >\r\n            Sign In\r\n          </button>\r\n          <p\r\n            className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800 cursor-pointer\"\r\n            onClick={() => navigate('/register')}\r\n          >\r\n            Sign Up\r\n          </p>\r\n        </div>\r\n      </form>\r\n      <p className=\"text-center text-gray-500 text-xs\">\r\n        &copy;2022 Colton Almaraz. All rights reserved.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\ChatMessage\\ChatMessage.tsx",[],"C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\Chat\\Chat.tsx",["71","72"],"import { ChatProps, Message, User } from './types';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { DefaultEventsMap } from '@socket.io/component-emitter';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { ChatMessage } from '..';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { userInfoState } from '../../atoms';\r\n\r\nlet socket: Socket<DefaultEventsMap, DefaultEventsMap> | null;\r\n\r\nconst ENDPOINT = 'http://localhost:4000';\r\n\r\nexport const Chat: React.FC<ChatProps> = () => {\r\n  const userInfo = useRecoilValue(userInfoState);\r\n\r\n  const params = useParams();\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [userName, setUserName] = useState(userInfo?.name);\r\n  const [roomUsers, setRoomUsers] = useState<User[]>([]);\r\n\r\n  const messagesRef = useRef<null | HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n\r\n    socket.emit('join', { userName, roomId: params.roomId });\r\n\r\n    socket.on('roomUsers', (users) => {\r\n      setRoomUsers(users);\r\n    });\r\n  }, [ENDPOINT]);\r\n\r\n  useEffect(() => {\r\n    socket?.on('message', (data) => setMessages((prev) => [...prev, data]));\r\n  }, []);\r\n\r\n  const handleMessageSend = () => {\r\n    socket?.emit('message', message);\r\n    setMessage('');\r\n    if (messagesRef.current) {\r\n      messagesRef.current.scrollTo({\r\n        top: messagesRef.current.scrollHeight,\r\n        behavior: 'smooth'\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"chat\" className=\"flex flex-col bg-gray-100\">\r\n      <div className=\"flex w-screen h-screen\">\r\n        <div className=\"w-[15vw] h-full blue-glassmorphism\">\r\n          <h2 className=\"text-2xl font-bold underline ml-2 mt-2\">Users</h2>\r\n          <ul className=\"ml-2 mt-2\">\r\n            {roomUsers.map((user) => (\r\n              <li key={user.id}>{user.userName}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"w-full h-full  flex flex-col \">\r\n          <h1 className=\"text-4xl font-bold ml-auto mr-auto my-5\">\r\n            Room {params.roomId}\r\n          </h1>\r\n\r\n          <div\r\n            ref={messagesRef}\r\n            className=\"h-max-[100vh] h-[100vh] overflow-scroll pb-10 no-scrollbar\"\r\n          >\r\n            {messages &&\r\n              messages.map((msg, i) => (\r\n                <ChatMessage\r\n                  message={msg.message}\r\n                  name={msg.name}\r\n                  time={msg.time}\r\n                  key={`${i}-${msg}`}\r\n                />\r\n              ))}\r\n          </div>\r\n          <div className=\"w-8/12 flex items-center justify-around mt-auto mb-5 bg-gray-200 py-4 mx-auto rounded-lg shadow-lg\">\r\n            <input\r\n              className=\"h-7 w-9/12 rounded-md p-3\"\r\n              id=\"chat-message\"\r\n              type=\"text\"\r\n              placeholder=\"Message...\"\r\n              onKeyPress={(e) => {\r\n                if (e.code === 'Enter') handleMessageSend();\r\n              }}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              value={message}\r\n              required\r\n            />\r\n            <button\r\n              className=\"rounded-md bg-blue-500 text-white w-1/12 h-7\"\r\n              onClick={handleMessageSend}\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\Rooms\\index.ts",[],"C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\Rooms\\Rooms.tsx",[],"C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\atoms.ts",[],"C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\RequireAuth\\index.ts",[],"C:\\Users\\almar\\Desktop\\ChatApp\\client\\src\\components\\RequireAuth\\RequireAuth.tsx",["73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":6,"column":3,"nodeType":"82","messageId":"83","endLine":6,"endColumn":33},{"ruleId":"80","severity":1,"message":"84","line":21,"column":20,"nodeType":"82","messageId":"83","endLine":21,"endColumn":31},{"ruleId":"85","severity":1,"message":"86","line":34,"column":6,"nodeType":"87","endLine":34,"endColumn":16,"suggestions":"88"},{"ruleId":"80","severity":1,"message":"89","line":3,"column":23,"nodeType":"82","messageId":"83","endLine":3,"endColumn":36},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],["90"],["91"],"@typescript-eslint/no-unused-vars","'createUserWithEmailAndPassword' is defined but never used.","Identifier","unusedVar","'setUserName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'params.roomId' and 'userName'. Either include them or remove the dependency array. Outer scope values like 'ENDPOINT' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["92"],"'userInfoState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [params.roomId, userName]",{"range":"95","text":"96"},[1130,1140],"[params.roomId, userName]"]