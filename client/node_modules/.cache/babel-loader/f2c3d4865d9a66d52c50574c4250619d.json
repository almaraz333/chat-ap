{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\almar\\\\Desktop\\\\ChatApp\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.tsx\",\n    _s = $RefreshSig$();\n\nimport { io } from 'socket.io-client';\nimport { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ChatMessage } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst ENDPOINT = 'http://localhost:4000';\nexport const Chat = () => {\n  _s();\n\n  const params = useParams();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [roomId, setRoomId] = useState();\n  const [userName, setUserName] = useState('Colton');\n  const [roomUsers, setRoomUsers] = useState([]);\n  const messagesRef = useRef(null);\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit('join', {\n      userName,\n      roomId: params.roomId\n    });\n    socket.on('roomUsers', users => {\n      setRoomUsers(users);\n    });\n  }, [ENDPOINT]);\n  useEffect(() => {\n    var _socket;\n\n    (_socket = socket) === null || _socket === void 0 ? void 0 : _socket.on('message', data => setMessages(prev => [...prev, data]));\n  }, []);\n\n  const handleMessageSend = () => {\n    var _socket2;\n\n    (_socket2 = socket) === null || _socket2 === void 0 ? void 0 : _socket2.emit('message', message);\n    setMessage('');\n\n    if (messagesRef.current) {\n      messagesRef.current.scrollTo({\n        top: messagesRef.current.scrollHeight,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"chat\",\n    className: \"flex flex-col bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-screen h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[15vw] h-full blue-glassmorphism\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: roomUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: user.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full  flex flex-col \",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold ml-auto mr-auto my-5\",\n          children: [\"Room \", params.roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesRef,\n          className: \"h-max-[100vh] h-[100vh] overflow-scroll pb-10 no-scrollbar\",\n          children: messages && messages.map((msg, i) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n            message: msg.message,\n            name: msg.name,\n            time: msg.time\n          }, `${i}-${msg}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-8/12 flex items-center justify-around mt-auto mb-5 bg-gray-200 py-4 mx-auto rounded-lg shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"h-7 w-9/12 rounded-md p-3\",\n            id: \"chat-message\",\n            type: \"text\",\n            placeholder: \"Message...\",\n            onKeyPress: e => {\n              if (e.code === 'Enter') handleMessageSend();\n            },\n            onChange: e => setMessage(e.target.value),\n            value: message,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"rounded-md bg-blue-500 text-white w-1/12 h-7\",\n            onClick: handleMessageSend,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"pCrY7kJRGfkVp7jMqwCpXfpTVlQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/almar/Desktop/ChatApp/client/src/components/Chat/Chat.tsx"],"names":["io","useEffect","useRef","useState","useParams","ChatMessage","socket","ENDPOINT","Chat","params","message","setMessage","messages","setMessages","roomId","setRoomId","userName","setUserName","roomUsers","setRoomUsers","messagesRef","emit","on","users","data","prev","handleMessageSend","current","scrollTo","top","scrollHeight","behavior","map","user","msg","i","name","time","e","code","target","value"],"mappings":"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","sourcesContent":["import { ChatProps, Message, User } from './types';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { DefaultEventsMap } from '@socket.io/component-emitter';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { ChatMessage } from '..';\r\n\r\nlet socket: Socket<DefaultEventsMap, DefaultEventsMap> | null;\r\n\r\nconst ENDPOINT = 'http://localhost:4000';\r\n\r\nexport const Chat: React.FC<ChatProps> = () => {\r\n  const params = useParams();\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [roomId, setRoomId] = useState<string | undefined>();\r\n  const [userName, setUserName] = useState('Colton');\r\n  const [roomUsers, setRoomUsers] = useState<User[]>([]);\r\n\r\n  const messagesRef = useRef<null | HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n\r\n    socket.emit('join', { userName, roomId: params.roomId });\r\n\r\n    socket.on('roomUsers', (users) => {\r\n      setRoomUsers(users);\r\n    });\r\n  }, [ENDPOINT]);\r\n\r\n  useEffect(() => {\r\n    socket?.on('message', (data) => setMessages((prev) => [...prev, data]));\r\n  }, []);\r\n\r\n  const handleMessageSend = () => {\r\n    socket?.emit('message', message);\r\n    setMessage('');\r\n    if (messagesRef.current) {\r\n      messagesRef.current.scrollTo({\r\n        top: messagesRef.current.scrollHeight,\r\n        behavior: 'smooth'\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"chat\" className=\"flex flex-col bg-gray-100\">\r\n      <div className=\"flex w-screen h-screen\">\r\n        <div className=\"w-[15vw] h-full blue-glassmorphism\">\r\n          <ul>\r\n            {roomUsers.map((user) => (\r\n              <li>{user.userName}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"w-full h-full  flex flex-col \">\r\n          <h1 className=\"text-3xl font-bold ml-auto mr-auto my-5\">\r\n            Room {params.roomId}\r\n          </h1>\r\n\r\n          <div\r\n            ref={messagesRef}\r\n            className=\"h-max-[100vh] h-[100vh] overflow-scroll pb-10 no-scrollbar\"\r\n          >\r\n            {messages &&\r\n              messages.map((msg, i) => (\r\n                <ChatMessage\r\n                  message={msg.message}\r\n                  name={msg.name}\r\n                  time={msg.time}\r\n                  key={`${i}-${msg}`}\r\n                />\r\n              ))}\r\n          </div>\r\n          <div className=\"w-8/12 flex items-center justify-around mt-auto mb-5 bg-gray-200 py-4 mx-auto rounded-lg shadow-lg\">\r\n            <input\r\n              className=\"h-7 w-9/12 rounded-md p-3\"\r\n              id=\"chat-message\"\r\n              type=\"text\"\r\n              placeholder=\"Message...\"\r\n              onKeyPress={(e) => {\r\n                if (e.code === 'Enter') handleMessageSend();\r\n              }}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              value={message}\r\n              required\r\n            />\r\n            <button\r\n              className=\"rounded-md bg-blue-500 text-white w-1/12 h-7\"\r\n              onClick={handleMessageSend}\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}