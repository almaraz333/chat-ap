{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\almar\\\\Desktop\\\\ChatApp\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.tsx\",\n    _s = $RefreshSig$();\n\nimport { io } from 'socket.io-client';\nimport { useEffect, useState } from 'react';\nimport { ChatMessage } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chat = () => {\n  _s();\n\n  const ENDPOINT = 'http://localhost:4000';\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const socket = io(ENDPOINT);\n  useEffect(() => {\n    socket.on('message', data => setMessages(prev => [...prev, data]));\n  }, [socket]);\n\n  const handleMessageSend = () => {\n    socket.emit('message', message);\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"chat\",\n    className: \"flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-screen h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[15vw] h-full blue-glassmorphism\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full bg-gray-100 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: messages && messages.map((msg, i) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n            message: msg\n          }, `${i}-${msg}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center mt-auto mb-5 bg-gray-200 py-5 mx-10 rounded-lg shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"mr-5 h-7 w-9/12 rounded-md p-3\",\n            id: \"chat-message\",\n            type: \"text\",\n            placeholder: \"Message...\",\n            onKeyPress: e => {\n              if (e.code === 'Enter') handleMessageSend();\n            },\n            onChange: e => setMessage(e.target.value),\n            value: message,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"rounded-md bg-blue-500 text-white w-1/12 h-7\",\n            onClick: handleMessageSend,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"WDgp24k/FdZO6Mwa4GS0i45C6ek=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/almar/Desktop/ChatApp/client/src/components/Chat/Chat.tsx"],"names":["io","useEffect","useState","ChatMessage","Chat","ENDPOINT","message","setMessage","messages","setMessages","socket","on","data","prev","handleMessageSend","emit","map","msg","i","e","code","target","value"],"mappings":";;;AACA,SAASA,EAAT,QAAmB,kBAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,IAA5B;;AAEA,OAAO,MAAMC,IAAyB,GAAG,MAAM;AAAA;;AAC7C,QAAMC,QAAQ,GAAG,uBAAjB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAyB,EAAzB,CAAxC;AACA,QAAMQ,MAAM,GAAGV,EAAE,CAACK,QAAD,CAAjB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAsBC,IAAD,IAAUH,WAAW,CAAEI,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUD,IAAV,CAAX,CAA1C;AACD,GAFQ,EAEN,CAACF,MAAD,CAFM,CAAT;;AAIA,QAAMI,iBAAiB,GAAG,MAAM;AAC9BJ,IAAAA,MAAM,CAACK,IAAP,CAAY,SAAZ,EAAuBT,OAAvB;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAHD;;AAKA,sBACE;AAAK,mBAAY,MAAjB;AAAwB,IAAA,SAAS,EAAC,eAAlC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA,gCACE;AAAA,oBACGC,QAAQ,IACPA,QAAQ,CAACQ,GAAT,CAAa,CAACC,GAAD,EAAMC,CAAN,kBACX,QAAC,WAAD;AAAa,YAAA,OAAO,EAAED;AAAtB,aAAiC,GAAEC,CAAE,IAAGD,GAAI,EAA5C;AAAA;AAAA;AAAA;AAAA,kBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAK,UAAA,SAAS,EAAC,2FAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,gCADZ;AAEE,YAAA,EAAE,EAAC,cAFL;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,WAAW,EAAC,YAJd;AAKE,YAAA,UAAU,EAAGE,CAAD,IAAO;AACjB,kBAAIA,CAAC,CAACC,IAAF,KAAW,OAAf,EAAwBN,iBAAiB;AAC1C,aAPH;AAQE,YAAA,QAAQ,EAAGK,CAAD,IAAOZ,UAAU,CAACY,CAAC,CAACE,MAAF,CAASC,KAAV,CAR7B;AASE,YAAA,KAAK,EAAEhB,OATT;AAUE,YAAA,QAAQ;AAVV;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE;AACE,YAAA,SAAS,EAAC,8CADZ;AAEE,YAAA,OAAO,EAAEQ,iBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAnDM;;GAAMV,I;;KAAAA,I","sourcesContent":["import { ChatProps } from './types';\r\nimport { io } from 'socket.io-client';\r\nimport { useEffect, useState } from 'react';\r\nimport { ChatMessage } from '..';\r\n\r\nexport const Chat: React.FC<ChatProps> = () => {\r\n  const ENDPOINT = 'http://localhost:4000';\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState<(string | undefined)[]>([]);\r\n  const socket = io(ENDPOINT);\r\n\r\n  useEffect(() => {\r\n    socket.on('message', (data) => setMessages((prev) => [...prev, data]));\r\n  }, [socket]);\r\n\r\n  const handleMessageSend = () => {\r\n    socket.emit('message', message);\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"chat\" className=\"flex flex-col\">\r\n      <div className=\"flex w-screen h-screen\">\r\n        <div className=\"w-[15vw] h-full blue-glassmorphism\"></div>\r\n        <div className=\"w-full h-full bg-gray-100 flex flex-col\">\r\n          <div>\r\n            {messages &&\r\n              messages.map((msg, i) => (\r\n                <ChatMessage message={msg} key={`${i}-${msg}`} />\r\n              ))}\r\n          </div>\r\n          <div className=\"flex items-center justify-center mt-auto mb-5 bg-gray-200 py-5 mx-10 rounded-lg shadow-lg\">\r\n            <input\r\n              className=\"mr-5 h-7 w-9/12 rounded-md p-3\"\r\n              id=\"chat-message\"\r\n              type=\"text\"\r\n              placeholder=\"Message...\"\r\n              onKeyPress={(e) => {\r\n                if (e.code === 'Enter') handleMessageSend();\r\n              }}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              value={message}\r\n              required\r\n            />\r\n            <button\r\n              className=\"rounded-md bg-blue-500 text-white w-1/12 h-7\"\r\n              onClick={handleMessageSend}\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}