{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\almar\\\\Desktop\\\\ChatApp\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.tsx\",\n    _s = $RefreshSig$();\n\nimport { io } from 'socket.io-client';\nimport { useEffect, useRef, useState } from 'react';\nimport { ChatMessage } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chat = () => {\n  _s();\n\n  const ENDPOINT = 'http://localhost:4000';\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const messagesRef = useRef(null);\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = io(ENDPOINT);\n    socket.current.on('message', data => setMessages(prev => [...prev, data]));\n    return () => {\n      var _socket$current, _socket$current2;\n\n      (_socket$current = socket.current) === null || _socket$current === void 0 ? void 0 : _socket$current.emit('disconnect');\n      (_socket$current2 = socket.current) === null || _socket$current2 === void 0 ? void 0 : _socket$current2.off();\n    };\n  }, [ENDPOINT]);\n\n  const handleMessageSend = () => {\n    var _socket$current3;\n\n    (_socket$current3 = socket.current) === null || _socket$current3 === void 0 ? void 0 : _socket$current3.emit('message', message);\n    setMessage('');\n\n    if (messagesRef.current) {\n      messagesRef.current.scrollTo({\n        top: messagesRef.current.scrollHeight,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"chat\",\n    className: \"flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-screen h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[15vw] h-full blue-glassmorphism\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full bg-gray-100 flex flex-col \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesRef,\n          className: \"h-max-[100vh] h-[100vh] overflow-scroll pb-10 no-scrollbar\",\n          children: messages && messages.map((msg, i) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n            message: msg\n          }, `${i}-${msg}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-8/12 flex items-center justify-around mt-auto mb-5 bg-gray-200 py-4 mx-auto rounded-lg shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"h-7 w-9/12 rounded-md p-3\",\n            id: \"chat-message\",\n            type: \"text\",\n            placeholder: \"Message...\",\n            onKeyPress: e => {\n              if (e.code === 'Enter') handleMessageSend();\n            },\n            onChange: e => setMessage(e.target.value),\n            value: message,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"rounded-md bg-blue-500 text-white w-1/12 h-7\",\n            onClick: handleMessageSend,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"dYMTafL5bf1k1vm8IKgUWhkmHJE=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/almar/Desktop/ChatApp/client/src/components/Chat/Chat.tsx"],"names":["io","useEffect","useRef","useState","ChatMessage","Chat","ENDPOINT","message","setMessage","messages","setMessages","messagesRef","socket","current","on","data","prev","emit","off","handleMessageSend","scrollTo","top","scrollHeight","behavior","map","msg","i","e","code","target","value"],"mappings":"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","sourcesContent":["import { ChatProps } from './types';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { ChatMessage } from '..';\r\nimport { DefaultEventsMap } from '@socket.io/component-emitter';\r\n\r\nexport const Chat: React.FC<ChatProps> = () => {\r\n  const ENDPOINT = 'http://localhost:4000';\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState<\r\n    ({ name: string; message: string; time: string } | undefined)[]\r\n  >([]);\r\n\r\n  const messagesRef = useRef<null | HTMLDivElement>(null);\r\n\r\n  const socket = useRef<Socket<DefaultEventsMap, DefaultEventsMap> | null>(\r\n    null\r\n  );\r\n\r\n  useEffect(() => {\r\n    socket.current = io(ENDPOINT);\r\n\r\n    socket.current.on('message', (data) =>\r\n      setMessages((prev) => [...prev, data])\r\n    );\r\n\r\n    return () => {\r\n      socket.current?.emit('disconnect');\r\n\r\n      socket.current?.off();\r\n    };\r\n  }, [ENDPOINT]);\r\n\r\n  const handleMessageSend = () => {\r\n    socket.current?.emit('message', message);\r\n    setMessage('');\r\n    if (messagesRef.current) {\r\n      messagesRef.current.scrollTo({\r\n        top: messagesRef.current.scrollHeight,\r\n        behavior: 'smooth'\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div data-testid=\"chat\" className=\"flex flex-col\">\r\n      <div className=\"flex w-screen h-screen\">\r\n        <div className=\"w-[15vw] h-full blue-glassmorphism\"></div>\r\n        <div className=\"w-full h-full bg-gray-100 flex flex-col \">\r\n          <div\r\n            ref={messagesRef}\r\n            className=\"h-max-[100vh] h-[100vh] overflow-scroll pb-10 no-scrollbar\"\r\n          >\r\n            {messages &&\r\n              messages.map((msg, i) => (\r\n                <ChatMessage message={msg} key={`${i}-${msg}`} />\r\n              ))}\r\n          </div>\r\n          <div className=\"w-8/12 flex items-center justify-around mt-auto mb-5 bg-gray-200 py-4 mx-auto rounded-lg shadow-lg\">\r\n            <input\r\n              className=\"h-7 w-9/12 rounded-md p-3\"\r\n              id=\"chat-message\"\r\n              type=\"text\"\r\n              placeholder=\"Message...\"\r\n              onKeyPress={(e) => {\r\n                if (e.code === 'Enter') handleMessageSend();\r\n              }}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              value={message}\r\n              required\r\n            />\r\n            <button\r\n              className=\"rounded-md bg-blue-500 text-white w-1/12 h-7\"\r\n              onClick={handleMessageSend}\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}